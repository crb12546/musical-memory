"""initial schema

Revision ID: 94fbf0947a42
Revises: 
Create Date: 2025-02-18 08:37:56.035199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94fbf0947a42'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('current_stage', sa.String(), nullable=True),
    sa.Column('completed_stages', sa.String(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=False),
    sa.Column('headcount', sa.Integer(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('job_level', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('remote_policy', sa.String(), nullable=False),
    sa.Column('salary_range', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('responsibilities', sa.String(), nullable=False),
    sa.Column('qualifications', sa.String(), nullable=False),
    sa.Column('benefits', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('target_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interviews',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('candidate_id', sa.String(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('interview_type', sa.String(), nullable=True),
    sa.Column('technical_score', sa.Integer(), nullable=True),
    sa.Column('communication_score', sa.Integer(), nullable=True),
    sa.Column('culture_fit_score', sa.Integer(), nullable=True),
    sa.Column('overall_rating', sa.Float(), nullable=True),
    sa.Column('feedback', sa.String(), nullable=True),
    sa.Column('parsed_content', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requirements',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resumes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('candidate_id', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('parsed_content', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requirement_tags',
    sa.Column('requirement_id', sa.String(), nullable=True),
    sa.Column('tag_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
    )
    op.create_table('resume_tags',
    sa.Column('resume_id', sa.String(), nullable=True),
    sa.Column('tag_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resume_tags')
    op.drop_table('requirement_tags')
    op.drop_table('resumes')
    op.drop_table('requirements')
    op.drop_table('interviews')
    op.drop_table('tags')
    op.drop_table('projects')
    op.drop_table('candidates')
    # ### end Alembic commands ###
